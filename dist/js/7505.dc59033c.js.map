{"version":3,"file":"js/7505.dc59033c.js","mappings":"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","sources":["webpack://SPRC-NDERMS/./node_modules/devextreme-vue/select-box.js","webpack://SPRC-NDERMS/./node_modules/html-to-pdfmake/index.js"],"sourcesContent":["/*!\n * devextreme-vue\n * Version: 21.2.7\n * Build date: Mon Apr 11 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-vue\n */\n\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DxToolbarItem = exports.DxTo = exports.DxShow = exports.DxPosition = exports.DxOptions = exports.DxOffset = exports.DxMy = exports.DxItem = exports.DxHide = exports.DxFrom = exports.DxDropDownOptions = exports.DxCollision = exports.DxButton = exports.DxBoundaryOffset = exports.DxAt = exports.DxAnimation = exports.DxSelectBox = void 0;\nvar select_box_1 = __importDefault(require(\"devextreme/ui/select_box\"));\nvar index_1 = require(\"./core/index\");\nvar index_2 = require(\"./core/index\");\nvar DxSelectBox = index_1.createComponent({\n    props: {\n        acceptCustomValue: Boolean,\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        buttons: Array,\n        dataSource: [Array, Object, String],\n        deferRendering: Boolean,\n        disabled: Boolean,\n        displayExpr: [Function, String],\n        displayValue: String,\n        dropDownButtonTemplate: {},\n        dropDownOptions: Object,\n        elementAttr: Object,\n        fieldTemplate: {},\n        focusStateEnabled: Boolean,\n        grouped: Boolean,\n        groupTemplate: {},\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        inputAttr: {},\n        isValid: Boolean,\n        items: Array,\n        itemTemplate: {},\n        label: String,\n        labelMode: String,\n        maxLength: [Number, String],\n        minSearchLength: Number,\n        name: String,\n        noDataText: String,\n        onChange: Function,\n        onClosed: Function,\n        onContentReady: Function,\n        onCopy: Function,\n        onCustomItemCreating: Function,\n        onCut: Function,\n        onDisposing: Function,\n        onEnterKey: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onInput: Function,\n        onItemClick: Function,\n        onKeyDown: Function,\n        onKeyUp: Function,\n        onOpened: Function,\n        onOptionChanged: Function,\n        onPaste: Function,\n        onSelectionChanged: Function,\n        onValueChanged: Function,\n        opened: Boolean,\n        openOnFieldClick: Boolean,\n        placeholder: String,\n        readOnly: Boolean,\n        rtlEnabled: Boolean,\n        searchEnabled: Boolean,\n        searchExpr: [Array, Function, String],\n        searchMode: String,\n        searchTimeout: Number,\n        selectedItem: {},\n        showClearButton: Boolean,\n        showDataBeforeSearch: Boolean,\n        showDropDownButton: Boolean,\n        showSelectionControls: Boolean,\n        spellcheck: Boolean,\n        stylingMode: String,\n        tabIndex: Number,\n        text: String,\n        useItemTextAsTitle: Boolean,\n        validationError: {},\n        validationErrors: Array,\n        validationMessageMode: String,\n        validationStatus: String,\n        value: {},\n        valueChangeEvent: String,\n        valueExpr: [Function, String],\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapItemText: Boolean\n    },\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:acceptCustomValue\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:buttons\": null,\n        \"update:dataSource\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:displayExpr\": null,\n        \"update:displayValue\": null,\n        \"update:dropDownButtonTemplate\": null,\n        \"update:dropDownOptions\": null,\n        \"update:elementAttr\": null,\n        \"update:fieldTemplate\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:grouped\": null,\n        \"update:groupTemplate\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:inputAttr\": null,\n        \"update:isValid\": null,\n        \"update:items\": null,\n        \"update:itemTemplate\": null,\n        \"update:label\": null,\n        \"update:labelMode\": null,\n        \"update:maxLength\": null,\n        \"update:minSearchLength\": null,\n        \"update:name\": null,\n        \"update:noDataText\": null,\n        \"update:onChange\": null,\n        \"update:onClosed\": null,\n        \"update:onContentReady\": null,\n        \"update:onCopy\": null,\n        \"update:onCustomItemCreating\": null,\n        \"update:onCut\": null,\n        \"update:onDisposing\": null,\n        \"update:onEnterKey\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onInput\": null,\n        \"update:onItemClick\": null,\n        \"update:onKeyDown\": null,\n        \"update:onKeyUp\": null,\n        \"update:onOpened\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onPaste\": null,\n        \"update:onSelectionChanged\": null,\n        \"update:onValueChanged\": null,\n        \"update:opened\": null,\n        \"update:openOnFieldClick\": null,\n        \"update:placeholder\": null,\n        \"update:readOnly\": null,\n        \"update:rtlEnabled\": null,\n        \"update:searchEnabled\": null,\n        \"update:searchExpr\": null,\n        \"update:searchMode\": null,\n        \"update:searchTimeout\": null,\n        \"update:selectedItem\": null,\n        \"update:showClearButton\": null,\n        \"update:showDataBeforeSearch\": null,\n        \"update:showDropDownButton\": null,\n        \"update:showSelectionControls\": null,\n        \"update:spellcheck\": null,\n        \"update:stylingMode\": null,\n        \"update:tabIndex\": null,\n        \"update:text\": null,\n        \"update:useItemTextAsTitle\": null,\n        \"update:validationError\": null,\n        \"update:validationErrors\": null,\n        \"update:validationMessageMode\": null,\n        \"update:validationStatus\": null,\n        \"update:value\": null,\n        \"update:valueChangeEvent\": null,\n        \"update:valueExpr\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapItemText\": null,\n    },\n    model: { prop: \"value\", event: \"update:value\" },\n    computed: {\n        instance: function () {\n            return this.$_instance;\n        }\n    },\n    beforeCreate: function () {\n        this.$_WidgetClass = select_box_1.default;\n        this.$_hasAsyncTemplate = true;\n        this.$_expectedChildren = {\n            button: { isCollectionItem: true, optionName: \"buttons\" },\n            dropDownOptions: { isCollectionItem: false, optionName: \"dropDownOptions\" },\n            item: { isCollectionItem: true, optionName: \"items\" }\n        };\n    }\n});\nexports.DxSelectBox = DxSelectBox;\nvar DxAnimation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:hide\": null,\n        \"update:show\": null,\n    },\n    props: {\n        hide: [Object, Number, String],\n        show: [Object, Number, String]\n    }\n});\nexports.DxAnimation = DxAnimation;\nDxAnimation.$_optionName = \"animation\";\nDxAnimation.$_expectedChildren = {\n    hide: { isCollectionItem: false, optionName: \"hide\" },\n    show: { isCollectionItem: false, optionName: \"show\" }\n};\nvar DxAt = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxAt = DxAt;\nDxAt.$_optionName = \"at\";\nvar DxBoundaryOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxBoundaryOffset = DxBoundaryOffset;\nDxBoundaryOffset.$_optionName = \"boundaryOffset\";\nvar DxButton = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:location\": null,\n        \"update:name\": null,\n        \"update:options\": null,\n    },\n    props: {\n        location: String,\n        name: String,\n        options: Object\n    }\n});\nexports.DxButton = DxButton;\nDxButton.$_optionName = \"buttons\";\nDxButton.$_isCollectionItem = true;\nDxButton.$_expectedChildren = {\n    options: { isCollectionItem: false, optionName: \"options\" }\n};\nvar DxCollision = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxCollision = DxCollision;\nDxCollision.$_optionName = \"collision\";\nvar DxDropDownOptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxDropDownOptions = DxDropDownOptions;\nDxDropDownOptions.$_optionName = \"dropDownOptions\";\nDxDropDownOptions.$_expectedChildren = {\n    animation: { isCollectionItem: false, optionName: \"animation\" },\n    position: { isCollectionItem: false, optionName: \"position\" },\n    toolbarItem: { isCollectionItem: true, optionName: \"toolbarItems\" }\n};\nvar DxFrom = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxFrom = DxFrom;\nDxFrom.$_optionName = \"from\";\nDxFrom.$_expectedChildren = {\n    position: { isCollectionItem: false, optionName: \"position\" }\n};\nvar DxHide = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxHide = DxHide;\nDxHide.$_optionName = \"hide\";\nDxHide.$_expectedChildren = {\n    from: { isCollectionItem: false, optionName: \"from\" },\n    to: { isCollectionItem: false, optionName: \"to\" }\n};\nvar DxItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        disabled: Boolean,\n        html: String,\n        template: {},\n        text: String,\n        visible: Boolean\n    }\n});\nexports.DxItem = DxItem;\nDxItem.$_optionName = \"items\";\nDxItem.$_isCollectionItem = true;\nvar DxMy = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxMy = DxMy;\nDxMy.$_optionName = \"my\";\nvar DxOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxOffset = DxOffset;\nDxOffset.$_optionName = \"offset\";\nvar DxOptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:bindingOptions\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:icon\": null,\n        \"update:onClick\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:rtlEnabled\": null,\n        \"update:stylingMode\": null,\n        \"update:tabIndex\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:type\": null,\n        \"update:useSubmitBehavior\": null,\n        \"update:validationGroup\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        bindingOptions: Object,\n        disabled: Boolean,\n        elementAttr: Object,\n        focusStateEnabled: Boolean,\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        icon: String,\n        onClick: Function,\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        rtlEnabled: Boolean,\n        stylingMode: String,\n        tabIndex: Number,\n        template: {},\n        text: String,\n        type: String,\n        useSubmitBehavior: Boolean,\n        validationGroup: String,\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxOptions = DxOptions;\nDxOptions.$_optionName = \"options\";\nvar DxPosition = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:at\": null,\n        \"update:boundary\": null,\n        \"update:boundaryOffset\": null,\n        \"update:collision\": null,\n        \"update:my\": null,\n        \"update:of\": null,\n        \"update:offset\": null,\n    },\n    props: {\n        at: [Object, String],\n        boundary: {},\n        boundaryOffset: [Object, String],\n        collision: [Object, String],\n        my: [Object, String],\n        of: {},\n        offset: [Object, String]\n    }\n});\nexports.DxPosition = DxPosition;\nDxPosition.$_optionName = \"position\";\nvar DxShow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxShow = DxShow;\nDxShow.$_optionName = \"show\";\nvar DxTo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxTo = DxTo;\nDxTo.$_optionName = \"to\";\nvar DxToolbarItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:location\": null,\n        \"update:options\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:toolbar\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        disabled: Boolean,\n        html: String,\n        location: String,\n        options: {},\n        template: {},\n        text: String,\n        toolbar: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxToolbarItem = DxToolbarItem;\nDxToolbarItem.$_optionName = \"toolbarItems\";\nDxToolbarItem.$_isCollectionItem = true;\nexports.default = DxSelectBox;\n","// source: https://github.com/OpenSlides/OpenSlides/blob/f4f8b8422f9b3fbab58e35ac3f8f870d35813b7d/client/src/app/core/ui-services/html-to-pdf.service.ts\r\n// and https://github.com/bpampuch/pdfmake/issues/205\r\n\r\n/**\r\n  To use it:\r\n  import htmlToPdfMake from 'html-to-pdfmake.js'\r\n  htmlToPdfMake('<b>my bold text</b>');\r\n*/\r\n\r\n/**\r\n * Transform HTML code to a PdfMake object\r\n * @param  {String} htmlText The HTML code to transform\r\n * @param  {Object} [options]\r\n *   @param  {Object} [defaultStyles] An object with the default styles for each elements\r\n *   @param  {Boolean} [tableAutoSize=false] It permits to use the width/height defined in styles for a table's cells and rows\r\n *   @param  {Boolean} [imagesByReference=false] It permits to return two objets ({content, images}) to handle the `<img>` tags by reference\r\n *   @param  {Boolean} [removeExtraBlanks=false] Some blank spaces in your code may cause extra blank lines in the PDF – use this option to remove them\r\n *   @param  {Boolean} [showHidden=false] TRUE if the 'display:none' elements should be displayed\r\n *   @param  {Boolean} [removeTagClasses=false] TRUE if we don't want to have 'html-TAG' added as a class for each node\r\n *   @param  {Array} [ignoreStyles=[]] An array of style property to ignore\r\n *   @param  {Function} [customTag] It permits to handle non-regular HTML tag\r\n *   @param  {Object} [window] The `window` object (required for NodeJS server side use)\r\n * @return {Object} it returns a PdfMake object\r\n *\r\n * @example\r\n * // Some styles are applied by defaults for the supported HTML elements\r\n * // but you can pass your own styles if you prefer\r\n * htmlToPdfMake('<div><h1>My Title</h1><p>My paragraph</p></div>');\r\n *\r\n * // If you want to overwrite the default styles, e.g. you want <li> to not have a margin-left, and links to be 'purple' and not 'blue', and links without 'underline'\r\n * htmlToPdfMake('<ul><li>this is <a href=\"...\">a link</a></li><li>another item</li></ul>', {\r\n *   defaultStyles:{\r\n *     a:{\r\n *       color:'purple',\r\n *       decoration:null\r\n *     },\r\n *     li:null\r\n *   }\r\n * });\r\n */\r\n//var util = require(\"util\"); // to debug\r\nfunction htmlToPdfMake(htmlText, options) {\r\n  'use strict';\r\n  this.wndw = (options && options.window ? options.window : window);\r\n  this.tableAutoSize = (options && typeof options.tableAutoSize === \"boolean\" ? options.tableAutoSize : false);\r\n  this.imagesByReference = (options && typeof options.imagesByReference === \"boolean\" ? options.imagesByReference : false);\r\n  this.removeExtraBlanks = (options && typeof options.removeExtraBlanks === \"boolean\" ? options.removeExtraBlanks : false);\r\n  this.showHidden = (options && typeof options.showHidden === \"boolean\" ? options.showHidden : false);\r\n  this.removeTagClasses = (options && typeof options.removeTagClasses === \"boolean\" ? options.removeTagClasses : false);\r\n  this.ignoreStyles = (options && Array.isArray(options.ignoreStyles) ? options.ignoreStyles : []);\r\n\r\n  // A random string to be used in the image references\r\n  var imagesByReferenceSuffix = (Math.random().toString(36).slice(2,8));\r\n\r\n  // Used with the size attribute on the font elements to calculate relative font size\r\n  this.fontSizes = (options && Array.isArray(options.fontSizes) ? options.fontSizes : [10, 14, 16, 18, 20, 24, 28]);\r\n\r\n  // set default styles\r\n  this.defaultStyles = {\r\n    b: {bold:true},\r\n    strong: {bold:true},\r\n    u: {decoration:'underline'},\r\n    del: {decoration:'lineThrough'},\r\n    s: {decoration: 'lineThrough'},\r\n    em: {italics:true},\r\n    i: {italics:true},\r\n    h1: {fontSize:24, bold:true, marginBottom:5},\r\n    h2: {fontSize:22, bold:true, marginBottom:5},\r\n    h3: {fontSize:20, bold:true, marginBottom:5},\r\n    h4: {fontSize:18, bold:true, marginBottom:5},\r\n    h5: {fontSize:16, bold:true, marginBottom:5},\r\n    h6: {fontSize:14, bold:true, marginBottom:5},\r\n    a: {color:'blue', decoration:'underline'},\r\n    strike: {decoration: 'lineThrough'},\r\n    p: {margin:[0, 5, 0, 10]},\r\n    ul: {marginBottom:5,marginLeft:5},\r\n    table: {marginBottom:5},\r\n    th: {bold:true, fillColor:'#EEEEEE'}\r\n  }\r\n\r\n  // store the references to the images\r\n  this.imagesRef = [];\r\n\r\n  /**\r\n   * Permit to change the default styles based on the options\r\n   */\r\n  this.changeDefaultStyles = function () {\r\n    for (var keyStyle in options.defaultStyles) {\r\n      if (this.defaultStyles.hasOwnProperty(keyStyle)) {\r\n        // if we want to remove a default style\r\n        if (options.defaultStyles.hasOwnProperty(keyStyle) && !options.defaultStyles[keyStyle]) {\r\n          delete this.defaultStyles[keyStyle];\r\n        } else {\r\n          for (var k in options.defaultStyles[keyStyle]) {\r\n            // if we want to delete a specific property\r\n            if (options.defaultStyles[keyStyle][k] === '') delete this.defaultStyles[keyStyle][k];\r\n            else this.defaultStyles[keyStyle][k] = options.defaultStyles[keyStyle][k];\r\n          }\r\n        }\r\n      } else {\r\n        // if we add default styles\r\n        this.defaultStyles[keyStyle] = {}\r\n        for (var ks in options.defaultStyles[keyStyle]) {\r\n          this.defaultStyles[keyStyle][ks] = options.defaultStyles[keyStyle][ks];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (options && options.defaultStyles) {\r\n    this.changeDefaultStyles();\r\n  }\r\n\r\n  /**\r\n   * Takes an HTML string, converts to HTML using a DOM parser and recursivly parses\r\n   * the content into pdfmake compatible doc definition\r\n   *\r\n   * @param htmlText the html text to translate as string\r\n   * @returns pdfmake doc definition as object\r\n   */\r\n  this.convertHtml = function(htmlText) {\r\n    // Create a HTML DOM tree out of html string\r\n    var parser = new this.wndw.DOMParser();\r\n    if (this.removeExtraBlanks) htmlText = htmlText.replace(/(<\\/?(div|p|h1|h2|h3|h4|h5|h6|ol|ul|li)([^>]+)?>)\\s+(<\\/?(div|p|h1|h2|h3|h4|h5|h6|ol|ul|li))/gi, \"$1$4\").replace(/(<\\/?(div|p|h1|h2|h3|h4|h5|h6|ol|ul|li)([^>]+)?>)\\s+(<\\/?(div|p|h1|h2|h3|h4|h5|h6|ol|ul|li))/gi, \"$1$4\");\r\n    var parsedHtml = parser.parseFromString(htmlText, 'text/html');\r\n\r\n    var docDef = this.parseElement(parsedHtml.body, []);\r\n\r\n    // remove first level\r\n    return docDef.stack || docDef.text;\r\n  }\r\n\r\n  /**\r\n   * Converts a single HTML element to pdfmake, calls itself recursively for child html elements\r\n   *\r\n   * @param element can be an HTML element (<p>) or plain text (\"Hello World\")\r\n   * @param parentNode the parent node for the current element\r\n   * @param parents Array of node names of all the parents for the element\r\n   * @returns the doc def to the given element in consideration to the given paragraph and styles\r\n   */\r\n  this.parseElement = function(element, parents) {\r\n    var nodeName = element.nodeName.toUpperCase();\r\n    var nodeNameLowerCase = nodeName.toLowerCase();\r\n    var ret = {text:[]};\r\n    var text, needStack=false;\r\n    var dataset, i, key, _this=this;\r\n\r\n    // ignore some HTML tags\r\n    if (['COLGROUP','COL'].indexOf(nodeName) > -1) return '';\r\n\r\n    switch(element.nodeType) {\r\n      case 3: { // TEXT_NODE\r\n        if (element.textContent) {\r\n          text = element.textContent;\r\n          // check if we have 'white-space' in the parent's style\r\n          // or if a parent is a <PRE>\r\n          var styleParentTextNode = this.parseStyle(parents[parents.length-1], true);\r\n          var hasWhiteSpace = (parents.findIndex(function(p) { return p.nodeName === \"PRE\" })>-1);\r\n          for (i=0; i<styleParentTextNode.length; i++) {\r\n            if (styleParentTextNode[i].key === \"preserveLeadingSpaces\") {\r\n              hasWhiteSpace=styleParentTextNode[i].value;\r\n              break;\r\n            }\r\n          }\r\n          // if no 'white-space' style, then deal with white spaces\r\n          if (!hasWhiteSpace) text = text.replace(/\\s*\\n\\s*/g, \" \");\r\n          if (options && typeof options.replaceText === \"function\") text = options.replaceText(text, parents);\r\n\r\n          // for table, thead, tbody, tfoot, tr, ul, ol: remove all empty space\r\n          if (['TABLE','THEAD','TBODY','TFOOT','TR','UL','OL'].indexOf(parents[parents.length-1].nodeName) > -1) text = text.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n          if (text) {\r\n            ret = {'text':text};\r\n            ret = this.applyStyle({ret:ret, parents:parents});\r\n            return ret;\r\n          }\r\n        }\r\n\r\n        return '';\r\n      }\r\n      case 1: { // ELEMENT_NODE\r\n        if (!this.showHidden && (element.style.display && element.style.display === 'none') || (element.style.visibility && element.style.visibility === 'hidden')) {\r\n          return;\r\n        }\r\n\r\n        ret.nodeName = nodeName;\r\n        if (element.id) ret.id = element.id;\r\n        parents.push(element);\r\n\r\n        if (element.childNodes && element.childNodes.length>0) {\r\n          [].forEach.call(element.childNodes, function(child) {\r\n            var res = _this.parseElement(child, parents);\r\n            if (res) {\r\n              if (Array.isArray(res.text) && res.text.length===0) res.text='';\r\n              ret.text.push(res);\r\n            }\r\n          });\r\n          //console.log(nodeName,'=>',util.inspect(ret.text, {showHidden: false, depth: null})); // to debug\r\n          // find if we need a 'stack' instead of a 'text'\r\n          needStack = this.searchForStack(ret);\r\n          if (needStack) {\r\n            ret.stack = ret.text.slice(0);\r\n            delete ret.text;\r\n          } else {\r\n            // apply all the inhirent classes and styles from the parents\r\n            ret = this.applyStyle({ret:ret, parents:parents});\r\n          }\r\n        }\r\n        parents.pop();\r\n\r\n        switch(nodeName) {\r\n          case \"TABLE\":{\r\n            var rowIndex;\r\n            // the format for the table is table.body[[], [], …]\r\n            ret.table = {body:[]};\r\n\r\n            var tbodies = (ret.stack || ret.text);\r\n            if (Array.isArray(tbodies)) {\r\n              rowIndex = 0;\r\n              // Array with All Rows including THEAD\r\n              var hasRowSpan = false; // TRUE if we have some rowspan\r\n              // first round is to deal with colspan\r\n              // for each THEAD / TBODY\r\n              tbodies.forEach(function(tbody) {\r\n                // for each row\r\n                var rows = (tbody.stack || tbody.text);\r\n                if (Array.isArray(rows)) {\r\n                  rows.forEach(function(row) {\r\n                    var cells = (row.stack || row.text);\r\n                    // for each cell\r\n                    if (Array.isArray(cells)) {\r\n                      ret.table.body[rowIndex] = [];\r\n                      cells.forEach(function(cell) {\r\n                        ret.table.body[rowIndex].push(cell);\r\n                        // do we have a colSpan?\r\n                        // if yes, insert empty cells due to colspan\r\n                        if (cell.colSpan>1) {\r\n                          i = cell.colSpan;\r\n                          // insert an empty cell for each colspan\r\n                          while (--i > 0) {\r\n                            ret.table.body[rowIndex].push({text:''});\r\n                          }\r\n                        }\r\n\r\n                        // do we have a rowSpan ?\r\n                        if (cell.rowSpan > 1) hasRowSpan=true;\r\n                      });\r\n                      rowIndex++;\r\n                    }\r\n                 });\r\n                }\r\n              });\r\n\r\n              if (hasRowSpan) {\r\n                var header = ret.table.body[0];\r\n                if (Array.isArray(header)) {\r\n                  // determine the number of columns\r\n                  var columnCount = header.some(function(cell) {\r\n                    return cell.colSpan > 0;\r\n                  })\r\n                  ? header.reduce(function(partialCount, cell) {\r\n                      return partialCount + (cell.colSpan ? cell.colSpan : 0)\r\n                    }, 0)\r\n                  : header.length;\r\n                  // determine the number of rows\r\n                  var rowCount = ret.table.body.length;\r\n\r\n                  // for each column\r\n                  for (var columnInd=0; columnInd<columnCount; columnInd++) {\r\n                    for (var rowInd=0; rowInd<rowCount; rowInd++) {\r\n                      var row = ret.table.body[rowInd];\r\n                      if (Array.isArray(row)) {\r\n                        var cell = row[columnInd];\r\n                        // do we have a rowSpan?\r\n                        if (cell.rowSpan>1) {\r\n                          var len = cell.rowSpan;\r\n                          var cs, colspan = (cell.colSpan ? cell.colSpan : 1);\r\n                          for (var j=1; j<=len-1; j++) {\r\n                            cs = colspan;\r\n                            if (ret.table.body[rowInd+j]) {\r\n                              while (cs--) ret.table.body[rowInd+j].splice(columnInd, 0, {text:''});\r\n                            } else {\r\n                              // if we have an empty <tr></tr>\r\n                              cell.rowSpan--;\r\n                            }\r\n                          }\r\n                          // increase rowInd to skip processed rows\r\n                          rowInd += (len-1);\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            delete ret.stack;\r\n            delete ret.text;\r\n            // apply all the inhirent classes and styles from the parents, or for the current element\r\n            ret = this.applyStyle({ret:ret, parents:parents.concat([element])});\r\n\r\n            // if option tableAutoSize, then we try to apply the correct width/height on the table\r\n            if (this.tableAutoSize) {\r\n              var cellsWidths = [];\r\n              var cellsHeights = [];\r\n              var tableWidths = [];\r\n              var tableHeights = [];\r\n              // determine if we have \"width:100%\" on the TABLE\r\n              var fullWidth = (element.getAttribute(\"width\") === \"100%\" || (element.getAttribute(\"style\")||\"\").replace(/width\\s*:\\s*100%/, \"width:100%\").includes(\"width:100%\"));\r\n\r\n              // match XX.XX% or XX%\r\n              var percentRegex = new RegExp( /\\d+(.\\d+)?%/ );\r\n              // match width:XX.XX% or width: XX% (with or without whitespaces)\r\n              var widthRegex = new RegExp( /width\\s*:\\s*\\d+(.\\d+)?%/ );\r\n              // remove everything from percent string except numbers and dot\r\n              var cleanPercentageRegex = new RegExp( /[^0-9.]/g );\r\n              var elementWidth = element.getAttribute( \"width\" );\r\n              var elementStyle = element.getAttribute( \"style\" ) || \"\";\r\n              // check if table have width defined\r\n              var tableHaveWidth = ( percentRegex.test( elementWidth ) || widthRegex.test( elementStyle ) );\r\n              if ( tableHaveWidth ) {\r\n                var widthIndex = elementStyle.indexOf( \"width:\" );\r\n                var parsedStyle = elementStyle.substring( widthIndex, widthIndex + 11 );\r\n                // get only numbers of percentage\r\n                var tableWidth = ( parsedStyle || elementWidth ).replace( cleanPercentageRegex, \"\" );\r\n              }\r\n\r\n              var tableHaveColgroup = false;\r\n              var tableColgroupIndex = -1;\r\n              // check if any of table children is a colgroup with cells widths\r\n              for ( var x = 0; x < element.children.length; x++ ) {\r\n                var child = element.children[x];\r\n                if ( !tableHaveColgroup ) tableColgroupIndex++;\r\n                if ( child.nodeName.toUpperCase() === \"COLGROUP\" ) tableHaveColgroup = true;\r\n              };\r\n\r\n              ret.table.body.forEach(function(row, rowIndex) {\r\n                cellsWidths.push([]);\r\n                cellsHeights.push([]);\r\n                row.forEach(function(cell, cellIndex) {\r\n                  // we want to remember the different sizes\r\n                  var width = typeof cell.width !== 'undefined' ? cell.width : 'auto';\r\n                  if (width === '*') width='auto'; // tinymce could generate 'width:*', but it's invalid, so we use 'auto' instead\r\n                  var height = typeof cell.height !== 'undefined' ? cell.height : 'auto';\r\n                  if (height === '*') height='auto'; // tinymce could generate 'height:*', but it's invalid, so we use 'auto' instead\r\n                  // check if we have colspan or rowspan\r\n                  // if yes, and if width/height is a number, we divide by the col/rowspan, otherwise we use 'auto'\r\n                  if (width !== 'auto' && cell.colSpan>1) {\r\n                    if (!isNaN(width)) width /= cell.colSpan;\r\n                    else width = 'auto';\r\n                  }\r\n                  if (height !== 'auto' && cell.rowSpan>1) {\r\n                    if (!isNaN(height)) height /= cell.rowSpan;\r\n                    else height = 'auto';\r\n                  }\r\n\r\n                  // if we have colgroups defining cells widths\r\n                  if ( tableHaveColgroup ) {\r\n                    var colGroups = element.children[ tableColgroupIndex ];\r\n                    // get colgroup by cell index\r\n                    var colElement = colGroups.children[ cellIndex ];\r\n                    var colWidth = colElement.getAttribute( \"width\" );\r\n                    var colStyle = colElement.getAttribute( \"style\" ) || \"\";\r\n\r\n                    if (( percentRegex.test( colWidth ) || widthRegex.test( colStyle ) )) {\r\n                      var colWidthIndex = colStyle.indexOf( \"width:\" );\r\n                      var colParsedStyle = colStyle.substring( colWidthIndex, colWidthIndex + 11 );\r\n                      // update cell width to it's percentage in colgroup\r\n                      width = String(( colParsedStyle || colWidth ).replace( cleanPercentageRegex, \"\" )) + \"%\";\r\n                    }\r\n                  }\r\n\r\n                  cellsWidths[rowIndex].push(width);\r\n                  cellsHeights[rowIndex].push(height);\r\n                });\r\n              });\r\n\r\n              // determine the max width for each cell\r\n              cellsWidths.forEach(function(row) {\r\n                row.forEach(function(cellWidth, cellIndex) {\r\n                  var type = typeof tableWidths[cellIndex];\r\n                  if (type === \"undefined\" || (cellWidth !== 'auto' && type === \"number\" && cellWidth > tableWidths[cellIndex]) || (cellWidth !== 'auto' && tableWidths[cellIndex] === 'auto')) {\r\n                    if ( tableHaveWidth ) {\r\n                      // if table have defined widths we need to make a \r\n                      // rule of three to get cell's proportional width\r\n                      var cellPercentage = cellWidth === 'auto' ? tableWidth / row.length : ( cellWidth.toString().replace( '%', \"\" ) * tableWidth ) / 100;\r\n                      cellWidth = String(cellPercentage) + \"%\";\r\n                    }\r\n\r\n                    tableWidths[cellIndex] = cellWidth;\r\n                  }\r\n                });\r\n              });\r\n              // determine the max height for each row\r\n              cellsHeights.forEach(function(row, rowIndex) {\r\n                row.forEach(function(cellHeight) {\r\n                  var type = typeof tableHeights[rowIndex];\r\n                  if (type === \"undefined\" || (cellHeight !== 'auto' && type === \"number\" && cellHeight > tableHeights[rowIndex]) || (cellHeight !== 'auto' && tableHeights[rowIndex] === 'auto')) {\r\n                    tableHeights[rowIndex] = cellHeight;\r\n                  }\r\n                });\r\n              });\r\n              if (tableWidths.length > 0) {\r\n                // if all columns are in 'auto' and if we have 'width:\"100%\"' for the table\r\n                // then put widths:['*', '*' …], for all columns\r\n                //if (fullWidth && tableWidths.filter(function(w) { return w==='auto' }).length === tableWidths.length) tableWidths=tableWidths.map(function() { return '*' });\r\n                // see https://github.com/Aymkdn/html-to-pdfmake/issues/151#issuecomment-1273015585\r\n                // if we have 'width:\"100%\"' for the table, replace \"auto\" width to \"*\"\r\n                if (fullWidth) tableWidths=tableWidths.map(function(w) { return w==='auto' ? '*' : w });\r\n                ret.table.widths = tableWidths;\r\n              }\r\n              if (tableHeights.length > 0) ret.table.heights = tableHeights;\r\n            }\r\n\r\n            // check if we have some data-pdfmake to apply\r\n            if (element.dataset && element.dataset.pdfmake) {\r\n              // handle when people will use simple quotes, e.g. <table data-pdfmake=\"{'layout':'noBorders'}\">\r\n              dataset = element.dataset.pdfmake;\r\n              if (dataset.charAt(1) === \"'\") dataset=dataset.replace(/'/g,'\"');\r\n              try {\r\n                dataset = JSON.parse(dataset);\r\n                for (key in dataset) {\r\n                  if (key === \"layout\") {\r\n                    ret.layout = dataset[key];\r\n                  } else {\r\n                    ret.table[key] = dataset[key];\r\n                  }\r\n                }\r\n              } catch(e) {\r\n                console.error(e);\r\n              }\r\n            }\r\n            break;\r\n          }\r\n          case \"TH\":\r\n          case \"TD\":{\r\n            if (element.getAttribute(\"rowspan\")) ret.rowSpan = element.getAttribute(\"rowspan\")*1;\r\n            if (element.getAttribute(\"colspan\")) ret.colSpan = element.getAttribute(\"colspan\")*1;\r\n            // apply all the inhirent classes and styles from the parents, or for the current element\r\n            ret = this.applyStyle({ret:ret, parents:parents.concat([element])});\r\n            break;\r\n          }\r\n          case \"SVG\": {\r\n            ret = {\r\n              svg:element.outerHTML.replace(/\\n(\\s+)?/g, \"\"),\r\n              nodeName:'SVG'\r\n            }\r\n            if (!this.removeTagClasses) ret.style=['html-svg'];\r\n            break;\r\n          }\r\n          case \"BR\": {\r\n            // for BR we return '\\n'\r\n            ret.text = [{text:'\\n'}];\r\n            break;\r\n          }\r\n          case \"SUB\":\r\n          case \"SUP\": {\r\n            ret[nodeName.toLowerCase()] = { offset: '30%', fontSize: 8 };\r\n            break;\r\n          }\r\n          case \"HR\": {\r\n            // default style for the HR\r\n            var styleHR = {\r\n              width: 514,\r\n              type: \"line\",\r\n              margin: [0, 12, 0, 12],\r\n              thickness: 0.5,\r\n              color: \"#000000\",\r\n              left: 0\r\n            };\r\n            // we can override the default HR style with \"data-pdfmake\"\r\n            if (element.dataset && element.dataset.pdfmake) {\r\n              dataset = JSON.parse(element.dataset.pdfmake);\r\n              for (key in dataset) {\r\n                styleHR[key] = dataset[key];\r\n              }\r\n            }\r\n\r\n            ret.margin = styleHR.margin;\r\n            ret.canvas = [\r\n              {\r\n                type: styleHR.type,\r\n                x1: styleHR.left,\r\n                y1: 0,\r\n                x2: styleHR.width,\r\n                y2: 0,\r\n                lineWidth: styleHR.thickness,\r\n                lineColor: styleHR.color\r\n              }\r\n            ];\r\n            delete ret.text;\r\n\r\n            break;\r\n          }\r\n          case \"OL\":\r\n          case \"UL\": {\r\n            ret[nodeNameLowerCase] = (ret.stack || ret.text).slice(0);\r\n            delete ret.stack;\r\n            delete ret.text;\r\n            // apply all the inhirent classes and styles from the parents, or for the current element\r\n            ret = this.applyStyle({ret:ret, parents:parents.concat([element])});\r\n            // check if we have `start`\r\n            if (element.getAttribute(\"start\")) {\r\n              ret.start = element.getAttribute(\"start\")*1;\r\n            }\r\n            // check if we have \"type\"\r\n            switch (element.getAttribute(\"type\")) {\r\n              case 'A': ret.type = 'upper-alpha'; break;\r\n              case 'a': ret.type = 'lower-alpha'; break;\r\n              case 'I': ret.type = 'upper-roman'; break;\r\n              case 'i': ret.type = 'lower-roman'; break;\r\n            }\r\n\r\n            // check if we have `list-style-type` or `list-style`\r\n            if (ret.listStyle || ret.listStyleType) ret.type = ret.listStyle || ret.listStyleType;\r\n            break;\r\n          }\r\n          case \"LI\": {\r\n            // if it's a stack, then check if the last child has a \"text\"\r\n            if (ret.stack && !ret.stack[ret.stack.length-1].text) {\r\n              // if not, we restructure our node\r\n              text = ret.stack.slice(0, -1);\r\n              ret = [\r\n                (Array.isArray(text) ? {\"stack\": text} : {\"text\": text}),\r\n                ret.stack[ret.stack.length-1]\r\n              ];\r\n            }\r\n            // we don't want a child of UL/OL to be an array, but it should be a \"stack\"\r\n            if (Array.isArray(ret)) {\r\n              ret = {stack:ret};\r\n            }\r\n            break;\r\n          }\r\n          case \"PRE\":{\r\n            ret.preserveLeadingSpaces = true;\r\n            break;\r\n          }\r\n          case \"IMG\": {\r\n            if (this.imagesByReference) {\r\n              var src = element.getAttribute(\"data-src\") || element.getAttribute(\"src\");\r\n              var index = this.imagesRef.indexOf(src);\r\n              if (index>-1) ret.image = 'img_ref_'+imagesByReferenceSuffix+index;\r\n              else {\r\n                ret.image = 'img_ref_'+imagesByReferenceSuffix+this.imagesRef.length;\r\n                this.imagesRef.push(src);\r\n              }\r\n            } else {\r\n              ret.image = element.getAttribute(\"src\");\r\n            }\r\n            delete ret.stack;\r\n            delete ret.text;\r\n            // apply all the inhirent classes and styles from the parents, or for the current element\r\n            ret = this.applyStyle({ret:ret, parents:parents.concat([element])});\r\n            break;\r\n          }\r\n          case \"A\": {\r\n            // the link must be applied to the deeper `text` or stacked element (e.g. `image`)\r\n            var setLink = function(pointer, href) {\r\n              pointer = pointer || {text:''}; // for link without any text\r\n              if (Array.isArray(pointer.text)) {\r\n                return setLink(pointer.text[0], href);\r\n              } else if (Array.isArray(pointer.stack)) {\r\n                // if we have a more complex layer\r\n                pointer.stack = pointer.stack.map(function(stack) {\r\n                  return setLink(stack, href);\r\n                });\r\n                return pointer;\r\n              }\r\n              // if 'href' starts with '#' then it's an internal link\r\n              if (href.indexOf('#') === 0) pointer.linkToDestination=href.slice(1);\r\n              else pointer.link = href;\r\n              return pointer;\r\n            }\r\n            if (element.getAttribute(\"href\")) {\r\n              ret = setLink(ret, element.getAttribute(\"href\"));\r\n              ret.nodeName = \"A\";\r\n            }\r\n            break;\r\n          }\r\n          default: {\r\n            // handle other cases\r\n            if (options && typeof options.customTag === \"function\") {\r\n              ret = options.customTag.call(this, {element:element, parents:parents, ret:ret});\r\n            }\r\n          }\r\n        }\r\n\r\n        // reduce the number of JSON properties\r\n        if (Array.isArray(ret.text) && ret.text.length === 1 && ret.text[0].text && !ret.text[0].nodeName) {\r\n          ret.text = ret.text[0].text;\r\n        }\r\n\r\n        // check if we have some data-pdfmake to apply\r\n        if (['HR','TABLE'].indexOf(nodeName) === -1 && element.dataset && element.dataset.pdfmake) {\r\n          dataset = JSON.parse(element.dataset.pdfmake);\r\n          for (key in dataset) {\r\n            ret[key] = dataset[key];\r\n          }\r\n        }\r\n\r\n        return ret;\r\n      }\r\n    }\r\n  }\r\n\r\n  this.searchForStack = function(ret) {\r\n    if (Array.isArray(ret.text)) {\r\n      for (var i=0; i<ret.text.length; i++) {\r\n        if (ret.text[i].stack || ['P','DIV','TABLE','SVG','UL','OL','IMG','H1','H2','H3','H4','H5','H6'].indexOf(ret.text[i].nodeName) > -1) return true;\r\n        if (this.searchForStack(ret.text[i]) === true) return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Apply style and classes from all the parents\r\n   *\r\n   * @param  {Object} params\r\n   *   @param {Object} ret The object that will receive the 'style' and other properties\r\n   *   @param {Array} parents Array of node elements\r\n   * @return {Object} the modified 'ret'\r\n   */\r\n  this.applyStyle = function(params) {\r\n    var cssClass = [];\r\n    var lastIndex = params.parents.length-1;\r\n    var _this = this;\r\n    params.parents.forEach(function(parent, parentIndex) {\r\n      // classes\r\n      var parentNodeName = parent.nodeName.toLowerCase();\r\n      if (!_this.removeTagClasses) {\r\n        var htmlClass = 'html-' + parentNodeName;\r\n        if (htmlClass !== 'html-body' && cssClass.indexOf(htmlClass) === -1) cssClass.unshift(htmlClass);\r\n      }\r\n      var parentClass = (parent.getAttribute(\"class\")||\"\").split(' ');\r\n      parentClass.forEach(function(p) {\r\n        if (p) cssClass.push(p);\r\n      });\r\n      // styles\r\n      var style;\r\n      // not all the CSS properties should be inherent\r\n      var ignoreNonDescendentProperties = (parentIndex!==lastIndex);\r\n      // 1) the default styles\r\n      if (_this.defaultStyles[parentNodeName]) {\r\n        for (style in _this.defaultStyles[parentNodeName]) {\r\n          if (_this.defaultStyles[parentNodeName].hasOwnProperty(style)) {\r\n            if (!ignoreNonDescendentProperties ||\r\n                (ignoreNonDescendentProperties &&\r\n                  style.indexOf('margin') === -1 &&\r\n                  style.indexOf('border') === -1\r\n                )\r\n               ) {\r\n              // 'decoration' can be an array\r\n              if (style === 'decoration') {\r\n                if (!Array.isArray(params.ret[style])) params.ret[style]=[];\r\n                // do not apply twice the same (e.g. applying 2 \"underline\" will cause an extra blank space with an underline)\r\n                if (params.ret[style].indexOf(_this.defaultStyles[parentNodeName][style]) === -1) {\r\n                  params.ret[style].push(_this.defaultStyles[parentNodeName][style]);\r\n                }\r\n              } else {\r\n                params.ret[style] = JSON.parse(JSON.stringify(_this.defaultStyles[parentNodeName][style]));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 2) element's style\r\n      // we want TD/TH to receive descendant properties from TR\r\n      if (parentNodeName === 'tr') ignoreNonDescendentProperties=false;\r\n      style = _this.parseStyle(parent, ignoreNonDescendentProperties);\r\n      style.forEach(function(stl) {\r\n        // 'decoration' can be an array\r\n        if (stl.key === \"decoration\") {\r\n          if (!Array.isArray(params.ret[stl.key])) params.ret[stl.key]=[];\r\n          params.ret[stl.key].push(stl.value);\r\n        } else {\r\n          // when 'params.ret.margin' is defined but also a 'marginXYZ' is defined in `stl.key`,\r\n          // then we should change the correct index in `params.ret.margin` to reflect it\r\n          if (params.ret.margin && stl.key.indexOf('margin') === 0) {\r\n            // order: left | top | right | bottom\r\n            switch(stl.key) {\r\n              case \"marginLeft\": params.ret.margin[0]=stl.value; break;\r\n              case \"marginTop\": params.ret.margin[1]=stl.value; break;\r\n              case \"marginRight\": params.ret.margin[2]=stl.value; break;\r\n              case \"marginBottom\": params.ret.margin[3]=stl.value; break;\r\n            }\r\n          } else {\r\n            params.ret[stl.key] = stl.value;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    if (cssClass.length>0) params.ret.style = cssClass;\r\n    return params.ret;\r\n  }\r\n\r\n\t/**\r\n\t * Border Value Rearrange a CSS expression (e.g. 'border:solid 10px red' to 'border:10px solid red')\r\n\t *\r\n\t * @param {String} styleStr The CSS expression values\r\n\t * @returns {String} border value in global accepted format (e.g. 'border:10px solid red')\r\n\t */\r\n\tthis.borderValueRearrange = function(styleStr) {\r\n\t\ttry {\r\n\t\t\tvar styleArray = styleStr.split(' ');\r\n      if (styleArray.length!==3) return styleStr;\r\n\t\t\tvar v1 = \"0px\", v2 = \"none\", v3 = \"transparent\";\r\n\t\t\tvar style = [\"dotted\", \"dashed\", \"solid\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\", \"none\", \"hidden\", \"mix\"];\r\n\t\t\tstyleArray.forEach(function (v) {\r\n\t\t\t\tif (v.match(/^\\d/)) {\r\n\t\t\t\t\tv1 = v;\r\n\t\t\t\t} else if (style.indexOf(v) > -1) {\r\n\t\t\t\t\tv2 = v;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tv3 = v;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn v1 + ' ' + v2 + ' ' + v3;\r\n\t\t} catch (e) {\r\n\t\t\treturn styleStr;\r\n\t\t}\r\n\t}\r\n\r\n  /**\r\n   * Transform a CSS expression (e.g. 'margin:10px') in the PDFMake version\r\n   *\r\n   * @param {String} style The CSS expression to transform\r\n   * @param {DOMElement} element\r\n   * @param {Boolean} ignoreProperties TRUE when we have to ignore some properties, like border, padding, margin\r\n   * @returns {Array} array of {key, value}\r\n   */\r\n  this.parseStyle = function(element, ignoreProperties) {\r\n    var style = element.getAttribute(\"style\") || \"\";\r\n    var ret = [];\r\n    style = style.split(';');\r\n    // check if we have \"width\" or \"height\"\r\n    var width = element.getAttribute(\"width\");\r\n    var height = element.getAttribute(\"height\");\r\n    if (width) {\r\n      style.unshift(\"width:\" + this.convertToUnit(width + (isNaN(width) ? \"\" : \"px\")));\r\n    }\r\n    if (height) {\r\n      style.unshift(\"height:\" + this.convertToUnit(height + (isNaN(height) ? \"\" : \"px\")));\r\n    }\r\n    // check if we have 'color' or 'size' -- mainly for '<font>'\r\n    var color = element.getAttribute(\"color\");\r\n    if (color) {\r\n      ret.push({key:\"color\", value:this.parseColor(color)});\r\n    }\r\n    var size = element.getAttribute(\"size\");\r\n    if (size !== null) {\r\n      // Getting and sanitizing the size value: it should be included between 1 and 7\r\n      size = Math.min(Math.max(1, parseInt(size)), 7);\r\n      // Assigning the font size\r\n      ret.push({key:'fontSize', value:Math.max(this.fontSizes[0], this.fontSizes[size - 1])});\r\n    }\r\n\r\n    var styleDefs = style.map(function(style) { return style.toLowerCase().split(':') });\r\n    var borders = []; // special treatment for borders\r\n    var nodeName = element.nodeName.toUpperCase();\r\n    var _this=this;\r\n    styleDefs.forEach(function(styleDef) {\r\n      if (styleDef.length===2) {\r\n        var key = styleDef[0].trim().toLowerCase();\r\n        var value = styleDef[1].trim();\r\n        if (_this.ignoreStyles.indexOf(key) === -1) {\r\n          switch (key) {\r\n            case \"margin\": {\r\n              if (ignoreProperties) break;\r\n              // pdfMake uses a different order than CSS\r\n              value = value.split(' ');\r\n              if (value.length===1) value=[value[0], value[0], value[0], value[0]];\r\n              else if (value.length===2) value=[value[1], value[0]]; // vertical | horizontal ==> horizontal | vertical\r\n              else if (value.length===3) value=[value[1], value[0], value[1], value[2]]; // top | horizontal | bottom ==> left | top | right | bottom\r\n              else if (value.length===4) value=[value[3], value[0], value[1], value[2]]; // top | right | bottom | left ==> left | top | right | bottom\r\n\r\n              // we now need to convert to PT\r\n              value.forEach(function(val, i) {\r\n                value[i] = _this.convertToUnit(val);\r\n              });\r\n              // ignore if we have a FALSE in the table\r\n              if (value.indexOf(false) === -1) ret.push({key:key, value:value});\r\n              break;\r\n            }\r\n            case \"line-height\": {\r\n              // change % unit\r\n              if (typeof value === \"string\" && value.slice(-1) === '%') {\r\n                value = value.slice(0,-1) / 100;\r\n              } else {\r\n                value = _this.convertToUnit(value);\r\n              }\r\n              ret.push({key:\"lineHeight\", value:value});\r\n              break;\r\n            }\r\n            case \"text-align\": {\r\n              ret.push({key:\"alignment\", value:value});\r\n              break;\r\n            }\r\n            case \"font-weight\": {\r\n              if (value === \"bold\") ret.push({key:\"bold\", value:true});\r\n              break;\r\n            }\r\n            case \"text-decoration\": {\r\n              ret.push({key:\"decoration\", value:_this.toCamelCase(value)})\r\n              break;\r\n            }\r\n            case \"font-style\": {\r\n              if (value===\"italic\") ret.push({key:\"italics\", value:true});\r\n              break;\r\n            }\r\n            case \"font-family\": {\r\n\t\t\t\t\t\t\tret.push({\r\n\t\t\t\t\t\t\t\tkey: \"font\", value: value.split(',')[0].replace(/\"|^'|^\\s*|\\s*$|'$/g, \"\").replace(/^([a-z])/g, function (g) {\r\n\t\t\t\t\t\t\t\t\treturn g[0].toUpperCase();\r\n\t\t\t\t\t\t\t\t}).replace(/ ([a-z])/g, function (g) {\r\n\t\t\t\t\t\t\t\t\treturn g[1].toUpperCase();\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tbreak;\r\n            }\r\n            case \"color\": {\r\n              ret.push({key:\"color\", value:_this.parseColor(value)})\r\n              break;\r\n            }\r\n            case \"background-color\": {\r\n              // if TH/TD and key is 'background', then we use 'fillColor' instead\r\n              ret.push({key:(nodeName === 'TD' || nodeName === 'TH' ? \"fillColor\" : \"background\"), value:_this.parseColor(value)})\r\n              break;\r\n            }\r\n            case \"text-indent\": {\r\n              ret.push({key:\"leadingIndent\", value:_this.convertToUnit(value)});\r\n              break;\r\n            }\r\n            case \"white-space\": {\r\n              ret.push({key:\"preserveLeadingSpaces\", value:(value==='break-spaces' || value.slice(0,3) === 'pre')});\r\n              break;\r\n            }\r\n            default: {\r\n              // for borders\r\n              if (key === 'border' || key.indexOf('border-left') === 0 || key.indexOf('border-top') === 0 || key.indexOf('border-right') === 0 || key.indexOf('border-bottom') === 0) {\r\n                if (!ignoreProperties) borders.push({key:key, value:value});\r\n              } else {\r\n                // ignore some properties\r\n                if (ignoreProperties && (key.indexOf(\"margin-\") === 0 || key === 'width' || key === 'height')) break;\r\n                // for IMG only (see issue #181)\r\n                if (nodeName === \"IMG\" && (key === 'width' || key === 'height')) {\r\n                  ret.push({key:key, value: _this.convertToUnit(value)});\r\n                  break;\r\n                }\r\n\r\n                // padding is not supported by PDFMake\r\n                if (key.indexOf(\"padding\") === 0) break;\r\n                if (key.indexOf(\"-\") > -1) key=_this.toCamelCase(key);\r\n                if (value) {\r\n                  // convert value to a 'pt' when possible\r\n                  var parsedValue = _this.convertToUnit(value);\r\n                  // if we have 'font-size' with a parsedValue at false, then ignore it\r\n                  if (key === 'font-size' && parsedValue === false) break;\r\n                  ret.push({key:key, value:(parsedValue === false ? value : parsedValue)});\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    // for borders\r\n    if (borders.length > 0) {\r\n      // we have to merge together the borders in two properties\r\n      var border = []; // array of boolean\r\n      var borderColor = []; // array of colors\r\n      borders.forEach(function(b) {\r\n        // we have 3 properties: width style color\r\n\t\t\t\tb.value = _this.borderValueRearrange(b.value);\r\n        var properties = b.value.split(' ');\r\n        var width = properties[0].replace(/(\\d*)(\\.\\d+)?([^\\d]+)/g,\"$1$2 \").trim();\r\n        var index = -1, i;\r\n        if (b.key.indexOf('-left') > -1) index=0;\r\n        else if (b.key.indexOf('-top') > -1) index=1;\r\n        else if (b.key.indexOf('-right') > -1) index=2;\r\n        else if (b.key.indexOf('-bottom') > -1) index=3;\r\n        // for the width\r\n        if (index > -1) {\r\n          border[index] = (width > 0);\r\n        } else {\r\n          for (i=0; i<4; i++) border[i] = (width > 0);\r\n        }\r\n        // for the color\r\n        if (properties.length > 2) {\r\n          var color = properties.slice(2).join(' ');\r\n          if (index > -1) {\r\n            borderColor[index] = _this.parseColor(color);\r\n          } else {\r\n            for (i=0; i<4; i++) borderColor[i] = _this.parseColor(color);\r\n          }\r\n        }\r\n      });\r\n      // fill the gaps\r\n      for (var i=0; i<4; i++) {\r\n        if (border.length > 0 && typeof border[i] === \"undefined\") border[i]=true;\r\n        if (borderColor.length > 0 && typeof borderColor[i] === \"undefined\") borderColor[i]='#000000';\r\n      }\r\n      if (border.length > 0) ret.push({key:'border', value:border});\r\n      if (borderColor.length > 0) ret.push({key:'borderColor', value:borderColor});\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  this.toCamelCase = function(str) {\r\n    return str.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase() });\r\n  }\r\n\r\n  // input: h in [0,360] and s,v in [0,1] - output: \"rgb(0–255,0–255,0–255)\"\"\r\n  // source: https://stackoverflow.com/a/54014428/1134119 + https://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion#comment58413965_9493060\r\n  this.hsl2rgb = function(h,s,l) {\r\n    var a = s*Math.min(l,1-l);\r\n    var f = function(n) {\r\n      var k=(n+h/30)%12;\r\n      return Math.min(Math.floor((l - a*Math.max(Math.min(k-3,9-k,1),-1))*256),255);\r\n    }\r\n    return \"rgb(\"+f(0)+\",\"+f(8)+\",\"+f(4)+\")\";\r\n  }\r\n\r\n  /**\r\n   * Returns the color in a hex format (e.g. #12ff00).\r\n   * Also tries to convert RGB colors into hex values\r\n   *\r\n   * @param color color as string representation\r\n   * @returns color as hex values for pdfmake\r\n   */\r\n  this.parseColor = function(color) {\r\n    // e.g. `#fff` or `#ff0048`\r\n    var haxRegex = new RegExp('^#([0-9a-f]{3}|[0-9a-f]{6})$', 'i');\r\n\r\n    // e.g. rgb(0,255,34) or rgb(22, 0, 0) or rgb(100%, 100%, 100%) or rgba(0,125,250,0.8)\r\n    var rgbRegex = /^rgba?\\(\\s*(\\d+(\\.\\d+)?%?),\\s*(\\d+(\\.\\d+)?%?),\\s*(\\d+(\\.\\d+)?%?)(,\\s*\\d+(\\.\\d+)?)?\\)$/;\r\n\r\n    // e.g. hsl(300, 10%, 20%)\r\n    var hslRegex = new RegExp('^hsl\\\\((\\\\d+(\\\\.\\\\d+)?%?),\\\\s*(\\\\d+(\\\\.\\\\d+)?%?),\\\\s*(\\\\d+(\\\\.\\\\d+)?%?)\\\\)$');\r\n\r\n    // e.g. \"white\" or \"red\"\r\n    var nameRegex = new RegExp('^[a-z]+$', 'i');\r\n\r\n    var decimalColors, decimalValue, hexString, ret=[];\r\n\r\n    if (haxRegex.test(color)) {\r\n      return color;\r\n    }\r\n\r\n    if (hslRegex.test(color)) {\r\n      // we want to convert to RGB\r\n      decimalColors = hslRegex.exec(color).slice(1);\r\n      // first value should be from 0 to 360\r\n      if (decimalColors[0].endsWith('%')) decimalValue = decimalColors[0].slice(0,-1) * 360 / 100;\r\n      else decimalValue = decimalColors[0]*1;\r\n      ret.push(decimalValue);\r\n      // next values should be % to convert to base 1\r\n      ret.push(decimalColors[2].slice(0,-1) / 100);\r\n      ret.push(decimalColors[4].slice(0,-1) / 100);\r\n      color = this.hsl2rgb(ret[0], ret[1], ret[2]);\r\n      ret = [];\r\n    }\r\n    if (rgbRegex.test(color)) {\r\n      decimalColors = rgbRegex.exec(color).slice(1).filter(function(v,i) {\r\n        return i%2===0 && typeof v !== \"undefined\";\r\n      });\r\n\r\n      decimalColors.forEach(function(decimalValue, i) {\r\n        // for the alpha number\r\n        if (i === 3) {\r\n          hexString = Math.round(decimalValue.replace(\",\",\"\") * 255).toString(16);\r\n          // when the alpha is 1 == FF, we should not use it\r\n          if (hexString === \"ff\") hexString=\"\";\r\n        } else {\r\n          // if it ends with '%', we calculcate based on 100%=255\r\n          if (decimalValue.endsWith('%')) {\r\n            decimalValue = Math.round(decimalValue.slice(0,-1) * 255 / 100);\r\n          } else decimalValue = decimalValue*1;\r\n          if (decimalValue > 255) {\r\n            decimalValue = 255;\r\n          }\r\n          hexString = '0' + decimalValue.toString(16);\r\n          hexString = hexString.slice(-2);\r\n        }\r\n        ret.push(hexString);\r\n      })\r\n      return '#' + ret.join('');\r\n    }\r\n    if (nameRegex.test(color)) return color;\r\n\r\n    console.error('Could not parse color \"' + color + '\"');\r\n    return color;\r\n  }\r\n\r\n  /**\r\n   * Convert 'px'/'rem'/'cm'/'em'/'in' to 'pt', and return false for the other ones. If it's only a number, it will just return it\r\n   *\r\n   * @param  {String} val The value with units (e.g. 12px)\r\n   * @return {Number|Boolean} Return the pt value, or false\r\n   */\r\n  this.convertToUnit = function(val) {\r\n    // if it's just a number, then return it\r\n    if (!isNaN(parseFloat(val)) && isFinite(val)) return val*1;\r\n    var mtch = (val+\"\").trim().match(/^(\\d*(\\.\\d+)?)(pt|px|r?em|cm|in)$/);\r\n    // if we don't have a number with supported units, then return false\r\n    if (!mtch) return false;\r\n    val = mtch[1];\r\n    switch(mtch[3]) {\r\n      case 'px':{\r\n        val = Math.round(val * 0.75292857248934); // 1px => 0.75292857248934pt\r\n        break;\r\n      }\r\n      case 'em':\r\n      case 'rem':{\r\n        val *= 12; // default font-size is 12pt\r\n        break;\r\n      }\r\n      case 'cm':{\r\n        val = Math.round(val * 28.34646); // 1cm => 28.34646\r\n        break;\r\n      }\r\n      case 'in':{\r\n        val *= 72; // 1in => 72 pt\r\n        break;\r\n      }\r\n    }\r\n    return val*1;\r\n  }\r\n\r\n  var result = this.convertHtml(htmlText);\r\n  // if we only pass a string without HTML code\r\n  if (typeof result === \"string\") result={text:result};\r\n  // if images by reference\r\n  if (this.imagesByReference) {\r\n    result = {content:result, images:{}};\r\n    this.imagesRef.forEach(function(src, i) {\r\n      // check if 'src' is a JSON string\r\n      result.images['img_ref_'+imagesByReferenceSuffix+i] = (src.startsWith(\"{\") ? JSON.parse(src) : src);\r\n    });\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = function(htmlText, options) {\r\n  return new htmlToPdfMake(htmlText, options);\r\n}\r\n"],"names":["require","__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","DxToolbarItem","DxTo","DxShow","DxPosition","DxOptions","DxOffset","DxMy","DxItem","DxHide","DxFrom","DxDropDownOptions","DxCollision","DxButton","DxBoundaryOffset","DxAt","DxAnimation","DxSelectBox","select_box_1","index_1","index_2","createComponent","props","acceptCustomValue","Boolean","accessKey","String","activeStateEnabled","buttons","Array","dataSource","deferRendering","disabled","displayExpr","Function","displayValue","dropDownButtonTemplate","dropDownOptions","elementAttr","fieldTemplate","focusStateEnabled","grouped","groupTemplate","height","Number","hint","hoverStateEnabled","inputAttr","isValid","items","itemTemplate","label","labelMode","maxLength","minSearchLength","name","noDataText","onChange","onClosed","onContentReady","onCopy","onCustomItemCreating","onCut","onDisposing","onEnterKey","onFocusIn","onFocusOut","onInitialized","onInput","onItemClick","onKeyDown","onKeyUp","onOpened","onOptionChanged","onPaste","onSelectionChanged","onValueChanged","opened","openOnFieldClick","placeholder","readOnly","rtlEnabled","searchEnabled","searchExpr","searchMode","searchTimeout","selectedItem","showClearButton","showDataBeforeSearch","showDropDownButton","showSelectionControls","spellcheck","stylingMode","tabIndex","text","useItemTextAsTitle","validationError","validationErrors","validationMessageMode","validationStatus","valueChangeEvent","valueExpr","visible","width","wrapItemText","emits","model","prop","event","computed","instance","$_instance","beforeCreate","$_WidgetClass","$_hasAsyncTemplate","$_expectedChildren","button","isCollectionItem","optionName","item","createConfigurationComponent","hide","show","$_optionName","x","y","location","options","$_isCollectionItem","animation","bindingOptions","closeOnOutsideClick","container","contentTemplate","copyRootClassesToWrapper","dragAndResizeArea","dragEnabled","dragOutsideBoundary","fullScreen","hideOnParentScroll","maxHeight","maxWidth","minHeight","minWidth","onHidden","onHiding","onResize","onResizeEnd","onResizeStart","onShowing","onShown","onTitleRendered","position","resizeEnabled","restorePosition","shading","shadingColor","showCloseButton","showTitle","title","titleTemplate","toolbarItems","wrapperAttr","toolbarItem","left","opacity","scale","top","complete","delay","direction","duration","easing","from","staggerDelay","start","to","type","html","template","icon","onClick","useSubmitBehavior","validationGroup","at","boundary","boundaryOffset","collision","my","of","offset","toolbar","widget","htmlToPdfMake","htmlText","wndw","window","tableAutoSize","imagesByReference","removeExtraBlanks","showHidden","removeTagClasses","ignoreStyles","isArray","imagesByReferenceSuffix","Math","random","toString","slice","fontSizes","defaultStyles","b","bold","strong","u","decoration","del","s","em","italics","i","h1","fontSize","marginBottom","h2","h3","h4","h5","h6","a","color","strike","p","margin","ul","marginLeft","table","th","fillColor","imagesRef","changeDefaultStyles","keyStyle","hasOwnProperty","k","ks","convertHtml","parser","DOMParser","replace","parsedHtml","parseFromString","docDef","parseElement","body","stack","element","parents","dataset","key","nodeName","toUpperCase","nodeNameLowerCase","toLowerCase","ret","needStack","_this","indexOf","nodeType","textContent","styleParentTextNode","parseStyle","length","hasWhiteSpace","findIndex","replaceText","applyStyle","style","display","visibility","id","push","childNodes","forEach","call","child","res","searchForStack","pop","rowIndex","tbodies","hasRowSpan","tbody","rows","row","cells","cell","colSpan","rowSpan","header","columnCount","some","reduce","partialCount","rowCount","columnInd","rowInd","cs","len","colspan","j","splice","concat","cellsWidths","cellsHeights","tableWidths","tableHeights","fullWidth","getAttribute","includes","percentRegex","RegExp","widthRegex","cleanPercentageRegex","elementWidth","elementStyle","tableHaveWidth","test","widthIndex","parsedStyle","substring","tableWidth","tableHaveColgroup","tableColgroupIndex","children","cellIndex","isNaN","colGroups","colElement","colWidth","colStyle","colWidthIndex","colParsedStyle","cellWidth","_typeof","cellPercentage","cellHeight","map","w","widths","heights","pdfmake","charAt","JSON","parse","layout","e","console","error","svg","outerHTML","styleHR","thickness","canvas","x1","y1","x2","y2","lineWidth","lineColor","listStyle","listStyleType","preserveLeadingSpaces","src","index","image","setLink","pointer","href","linkToDestination","link","customTag","params","cssClass","lastIndex","parent","parentIndex","parentNodeName","htmlClass","unshift","parentClass","split","ignoreNonDescendentProperties","stringify","stl","borderValueRearrange","styleStr","styleArray","v1","v2","v3","v","match","ignoreProperties","convertToUnit","parseColor","size","min","max","parseInt","styleDefs","borders","styleDef","trim","val","toCamelCase","g","parsedValue","border","borderColor","properties","join","str","hsl2rgb","h","l","f","n","floor","decimalColors","decimalValue","hexString","haxRegex","rgbRegex","hslRegex","nameRegex","exec","endsWith","filter","round","parseFloat","isFinite","mtch","result","content","images","startsWith","module"],"sourceRoot":""}